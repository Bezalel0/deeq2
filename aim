local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Camera = workspace.CurrentCamera

-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.ResetOnSpawn = false
screenGui.Parent = PlayerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 120)
frame.AnchorPoint = Vector2.new(1, 0)
frame.Position = UDim2.new(1, -10, 0, 10)
frame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
frame.BackgroundTransparency = 0.5
frame.Parent = screenGui

local function createButton(text, position)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -10, 0, 30)
    button.Position = position
    button.BackgroundColor3 = Color3.new(0.8, 0.8, 0.8)
    button.Text = text
    button.TextScaled = true
    button.Parent = frame
    return button
end

local aimbotButton = createButton("Aimbot: OFF", UDim2.new(0, 5, 0, 5))
local teamCheckButton = createButton("Team Check: OFF", UDim2.new(0, 5, 0, 40))
local minimizeButton = createButton("Minimize", UDim2.new(0, 5, 0, 75))

-- Minimized GUI
local minimizedButton = Instance.new("TextButton")
minimizedButton.Size = UDim2.new(0, 40, 0, 40)
minimizedButton.AnchorPoint = Vector2.new(1, 0)
minimizedButton.Position = frame.Position
minimizedButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
minimizedButton.BackgroundTransparency = 0.5
minimizedButton.Text = "+"
minimizedButton.TextScaled = true
minimizedButton.Visible = false
minimizedButton.Parent = screenGui

-- Dragging functionality
local dragging
local dragStart
local startPos
local lastPos

local function updateDrag(input)
    local delta = input.Position - dragStart
    local newPosition = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    
    local guiSize = frame.Visible and frame.AbsoluteSize or minimizedButton.AbsoluteSize
    local screenSize = workspace.CurrentCamera.ViewportSize
    
    newPosition = UDim2.new(
        newPosition.X.Scale,
        math.clamp(newPosition.X.Offset, 0, screenSize.X - guiSize.X),
        newPosition.Y.Scale,
        math.clamp(newPosition.Y.Offset, 0, screenSize.Y - guiSize.Y)
    )
    
    lastPos = newPosition
    
    if frame.Visible then
        frame.Position = newPosition
    else
        minimizedButton.Position = newPosition
    end
end

local function onInputBegan(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Visible and frame.Position or minimizedButton.Position
        lastPos = startPos
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end

local function onInputChanged(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        updateDrag(input)
    end
end

frame.InputBegan:Connect(onInputBegan)
minimizedButton.InputBegan:Connect(onInputBegan)
UserInputService.InputChanged:Connect(onInputChanged)

-- Aimbot variables
local aimbotEnabled = false
local teamCheckEnabled = false
local aimPart = "Head"
local sensitivity = 0.2

local function isTeamMate(player)
    return player.Team == LocalPlayer.Team
end

local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(aimPart) then
            if teamCheckEnabled and isTeamMate(player) then
                continue
            end
            local distance = (player.Character[aimPart].Position - Camera.CFrame.Position).Magnitude
            if distance < shortestDistance then
                closestPlayer = player
                shortestDistance = distance
            end
        end
    end

    return closestPlayer
end

local function updateAimbot(deltaTime)
    if aimbotEnabled and LocalPlayer.Character then
        local targetPlayer = getClosestPlayer()
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild(aimPart) then
            local targetPos = targetPlayer.Character[aimPart].Position
            local cameraPos = Camera.CFrame.Position
            local newCFrame = CFrame.new(cameraPos, targetPos)
            
            Camera.CFrame = Camera.CFrame:Lerp(newCFrame, sensitivity * deltaTime * 60)
        end
    end
end

-- Toggle functions
local function toggleAimbot()
    aimbotEnabled = not aimbotEnabled
    aimbotButton.Text = aimbotEnabled and "Aimbot: ON" or "Aimbot: OFF"
end

local function toggleTeamCheck()
    teamCheckEnabled = not teamCheckEnabled
    teamCheckButton.Text = teamCheckEnabled and "Team Check: ON" or "Team Check: OFF"
end

local function toggleMinimize()
    frame.Visible = not frame.Visible
    minimizedButton.Visible = not minimizedButton.Visible
    
    if frame.Visible then
        frame.Position = lastPos
    else
        minimizedButton.Position = lastPos
    end
end

-- Connect buttons
aimbotButton.MouseButton1Click:Connect(toggleAimbot)
teamCheckButton.MouseButton1Click:Connect(toggleTeamCheck)
minimizeButton.MouseButton1Click:Connect(toggleMinimize)
minimizedButton.MouseButton1Click:Connect(toggleMinimize)

-- Main update loop
RunService.RenderStepped:Connect(function(deltaTime)
    updateAimbot(deltaTime)
end)
