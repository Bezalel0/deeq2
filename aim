local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Camera = workspace.CurrentCamera

-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.ResetOnSpawn = false
screenGui.Parent = PlayerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 140, 0, 120) -- Smaller size for mobile
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.Position = UDim2.new(0.5, 0, 0.5, 0) -- Centered position
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.BorderSizePixel = 0
frame.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = frame

local function createButton(text, position)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -16, 0, 25) -- Smaller buttons
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    button.Text = text
    button.TextColor3 = Color3.new(1, 1, 1)
    button.TextScaled = true
    button.Parent = frame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 4)
    buttonCorner.Parent = button
    
    return button
end

local aimbotButton = createButton("Aimbot: OFF", UDim2.new(0, 8, 0, 5))
local teamCheckButton = createButton("Team Check: OFF", UDim2.new(0, 8, 0, 35))
local espButton = createButton("ESP: OFF", UDim2.new(0, 8, 0, 65))
local minimizeButton = createButton("Minimize", UDim2.new(0, 8, 0, 95))

-- Dragging functionality
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Aimbot and ESP functionality (as in the previous message)
-- ...

-- Toggle functions
local function toggleAimbot()
    aimbotEnabled = not aimbotEnabled
    aimbotButton.Text = aimbotEnabled and "Aimbot: ON" or "Aimbot: OFF"
end

local function toggleTeamCheck()
    teamCheckEnabled = not teamCheckEnabled
    teamCheckButton.Text = teamCheckEnabled and "Team Check: ON" or "Team Check: OFF"
end

local function toggleESP()
    espEnabled = not espEnabled
    espButton.Text = espEnabled and "ESP: ON" or "ESP: OFF"
    if espEnabled then
        refreshESP()
    else
        for _, gui in pairs(espGuis) do
            if gui and gui.Parent then
                gui.Parent = nil
            end
        end
    end
end

-- Connect buttons
aimbotButton.MouseButton1Click:Connect(toggleAimbot)
teamCheckButton.MouseButton1Click:Connect(toggleTeamCheck)
espButton.MouseButton1Click:Connect(toggleESP)
minimizeButton.MouseButton1Click:Connect(function()
    frame.Visible = false
    -- Create a small button to restore the GUI
    local restoreButton = Instance.new("TextButton")
    restoreButton.Size = UDim2.new(0, 40, 0, 40)
    restoreButton.Position = UDim2.new(1, -50, 0, 10)
    restoreButton.AnchorPoint = Vector2.new(1, 0)
    restoreButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    restoreButton.Text = "+"
    restoreButton.TextColor3 = Color3.new(1, 1, 1)
    restoreButton.TextScaled = true
    restoreButton.Parent = screenGui
    
    local restoreCorner = Instance.new("UICorner")
    restoreCorner.CornerRadius = UDim.new(0, 8)
    restoreCorner.Parent = restoreButton
    
    restoreButton.MouseButton1Click:Connect(function()
        frame.Visible = true
        restoreButton:Destroy()
    end)
end)

-- Main update loop
RunService.RenderStepped:Connect(function()
    updateAimbot()
    updateESP()
end)

-- Set up auto-refresh for ESP
spawn(function()
    while true do
        wait(5)  -- Wait for 5 seconds
        if espEnabled then
            refreshESP()
        end
    end
end)
